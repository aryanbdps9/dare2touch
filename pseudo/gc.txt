function gc(gid, nop=2, isServer = false){
	var grid_require = require('./grid')
	var nor = 480, noc = 720;
	var grid = new grid_require('nor, noc');
	var full = false
	var current_nop = 0
	var max_nop = nop;
	var player_obj_list = []
	var update_switch = undefined;
	var interval = 100; // time after which kallar is called;

	member functions:
		add_player(player):
			call add_player() of grid
			if (isServer):
				player_obj_list.forEach(function(p){
					p.emit('add_this_player', player.pid);
				});
				player_obj_list.forEach(function(p){
					player.emit('add_this_player', p.pid);
				});

			player_obj_list.push(player)
			increments current_nop
			if current_nop = max_nop:
				full = true;

		add_sequence(seq): // assuming that it is already verified
			grid.add_sequence(seq)
			if (isServer):
				player_obj_list.forEach(function(p){
					p.emit('seq_update',"this guy has moved this way!")
				});

		kallar(): //i mean caller() 
			grid.update();
			if (!isServer):
				render (grid.get_board());
			else{
				var new_killed_list = grid.get_newly_killed_pids()
				player_obj_list.forEach(function(p){
					p.emit('dead_update', "these ppl have died bitches!")
				});
				if (grid.game_over()):
					p.emit('game_over', "game over pussy cat")
			}

		start_updating():
			if (isServer):
				player_obj_list.forEach(function(p){
					p.emit('game_start');
				});
			update_switch =setInterval(kallar, interval);
}